[tool.poetry]
name = "django-easy-audit"
version = "1.3.7-b3"
description = "Yet another Django audit log app, hopefully the simplest one."
license = "GPL3"
authors = ["Nat√°n Calzolari <natancalzolari@gmail.com>"]
readme = "README.md"
homepage = "https://github.com/soynatan/django-easy-audit"
repository = "https://github.com/soynatan/django-easy-audit"
documentation = "https://github.com/soynatan/django-easy-audit/wiki"
classifiers = [
    "Environment :: Plugins",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5.0",
    "Framework :: Django",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
packages = [{include = "easyaudit"}]

[tool.poetry.dependencies]
python = "^3.8"
django = ">=4.2,<6.0"

[tool.poetry.group.dev.dependencies]
djlint = "^1.34.1"
pre-commit = [
    {version = "~3.5", python = "<3.9"},
    {version = "^3.5", python = ">=3.9"},
]
ruff = "^0.1.11"

[tool.poetry.group.test.dependencies]
pytest = "^7.4.4"
pytest-asyncio = "^0.23.3"
pytest-cov = "^4.1.0"
pytest-django = "^4.7.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
asyncio_mode = "auto"
addopts = [
    "--ds=tests.settings",         # Forces pytest-django to use test settings
    "--ignore-glob='*/models.py'",
    "-W error",
]

[tool.ruff]
extend-exclude = ["migrations"]
ignore = [
    "D1",     # Missing docstrings
    "D203",   # Docstrings on class definitions not preceded by a blank line
    "D213",   # Multi-line docstring summary should start at the second line
    "D407",   # Dashed underline after doc section (not compatible with google style)
    "DJ008",  # Model does not define `__str__` method
    "RUF012", # Mutable default values in class attributes
]
line-length = 92
select = [ # https://docs.astral.sh/ruff/rules
    "F",   # pyflakes
    "E",   # pycodestyle
    "W",   # pycodestyle
    "C90", # mccabe
    "I",   # isort
    "N",   # pep8-naming
    "D",   # pydocstyle
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "S",   # flake8-bandit
    "A",   # flake8-builtins
    "C4",  # flake8-comprehensions
    "DTZ", # flake8-datetimez
    "DJ",  # flake8-django
    "ISC", # flake8-implicit-str-concat
    "EXE", # flake8-executable
    "PT",  # flake8-pytest-style
    "Q",   # flake8-quotes
    "RET", # flake8-return
    "TCH", # flake8-type-checking
    "SIM", # flake8-simplify
    "T20", # flake8-print
    "TID", # flake8-tidy-imports
    "ERA", # eradicate
    "PL",  # pylint
    "RUF", # ruff
]
show-fixes = true
target-version = "py38"

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.ruff.per-file-ignores]
"**/test_*.py" = ["PLR2004", "S101", "S106"]
