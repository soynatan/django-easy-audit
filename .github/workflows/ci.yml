name: CI

on: 
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      max-parallel: 4
      matrix:
        python-version: [3.8, 3.9, '3.10', 3.11, 3.12, 3.13.0-rc.2]
        django-version: [4.2, '5.0', 5.1]
        exclude:
          # Django 5.0 and 5.1 only support Python 3.10 to 3.12
          - python-version: 3.8
            django-version: 5.0
          - python-version: 3.9
            django-version: 5.0
          - python-version: 3.8
            django-version: 5.1
          - python-version: 3.9
            django-version: 5.1
          - python-version: 3.13.0-rc.2
            django-version: 4.2

    steps:
      - name: Checkout ${{ github.repository }}
        uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached environment
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        id: poetry-install
        run: |
          poetry install --no-interaction --no-root
          poetry run pip install Django==${{ matrix.django-version }}.*
          echo "django_version=$(poetry run django-admin --version)" >> $GITHUB_OUTPUT

      - name: Run pre-commit
        run: poetry run pre-commit run --all-files

      - name: Run Tests (Django ${{ steps.poetry-install.outputs.django_version }})
        # enforce failing fast: https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#exit-codes-and-error-action-preference
        shell: bash
        run: |
          poetry run pytest \
          --junitxml=pytest.xml \
          --cov-report=term-missing:skip-covered \
          --cov=easyaudit | tee pytest-coverage.txt

      - name: Add coverage comment
        uses: MishaKav/pytest-coverage-comment@main
        continue-on-error: true
        with:
          pytest-coverage-path: ./pytest-coverage.txt
          junitxml-path: ./pytest.xml
          report-only-changed-files: true
          title: Coverage Report
          unique-id-for-comment: ${{ matrix.python-version }}
          remove-link-from-badge: true
